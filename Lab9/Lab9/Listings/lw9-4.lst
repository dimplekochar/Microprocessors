C51 COMPILER V9.59.0.0   LW9_4                                                             10/22/2018 16:23:09 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LW9_4
OBJECT MODULE PLACED IN .\Objects\lw9-4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe lw9-4.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lw9
                    --4.lst) TABS(2) OBJECT(.\Objects\lw9-4.obj)

line level    source

   1          /**
   2           SPI HOMEWORK2 , LABWORK2 (SAME PROGRAM)
   3           */
   4          
   5          /* @section  I N C L U D E S */
   6          #include "at89c5131.h"
   7          #include "stdio.h"
   8          #define sample 1
   9          void SPI_Init();
  10          void sdelay(int delay);
  11          void delay_ms(int delay);
  12          void Timer_Init();
  13          sbit CS_BAR = P3^4;                 // Chip Select for the ADC
  14          sbit FS=P3^5;
  15          sbit ONULL = P1^0;
  16          sbit led=P1^4;
  17          bit transmit_completed= 0;              // To check if spi data transmit is complete
  18          bit offset_null = 0;                // Check if offset nulling is enabled
  19          bit roundoff = 0;
  20          unsigned char xx, x, lupt[]={0x08, 0x00, 0x09, 0x8f, 0x0B, 0x0F, 0x0c, 0x71, 0x0d, 0xa7, 0x0e, 0xa6, 0x0f,
             - 0x63, 0x0f, 0xd8, 0x0f, 0xff, 0x0f, 0xd8, 0x0f, 0x63, 0x0e, 0xa6, 0x0d, 0xa7, 0x0c, 0x71, 0x0B, 0x0F, 0x09, 0x8f, 0x08,
             - 0x00, 0x06, 0x70, 0x04, 0xf0,  0x03, 0x8e, 0x02, 0x58, 0x01, 0x59, 0x00, 0x9c, 0x00, 0x27, 0x00, 0x00, 0x00, 0x27,  0x0
             -0, 0x9c, 0x01, 0x59, 0x02, 0x58, 0x03, 0x8e, 0x04, 0xf0, 0x06, 0x70};
  21          //unsigned long adcVal=0, voltage= 0 , sum = 0,tempadcVal=0 ,temp_low,temp_high,try0=0;
  22          //unsigned int avgVal=0, initVal=0, adcValue = 0 , temp=0 ;
  23          int l=0;
  24          unsigned char serial_data;
  25          //unsigned char data_save_high;
  26          //unsigned char data_save_low;
  27          int i=0, j=31, d, k, m=40;
  28          /**
  29          
  30           * FUNCTION_INPUTS:  P1.5(MISO) serial input  
  31           * FUNCTION_OUTPUTS: P1.7(MOSI) serial output
  32           *                   P1.4(SSbar)
  33                               P1.6(SCK)
  34           */
  35           
  36          void main(void)
  37          {
  38   1        FS=1;
  39   1        CS_BAR = 1;
  40   1        SPI_Init();
  41   1        Timer_Init();
  42   1        TR0=1;
  43   1        while(1)
  44   1        {i=0;
  45   2        while(i<64){
  46   3          CS_BAR = 0;                               // falling edge of CS bar
  47   3          FS=0;
  48   3          //xx=(lupt[i]<<4)+(lupt[i+1]>>4);
  49   3          SPDAT= lupt[i];                     // first 4 bits will be address of the channel
  50   3          while(!transmit_completed);               // wait for the transmit complete flag    
  51   3          transmit_completed = 0; 
C51 COMPILER V9.59.0.0   LW9_4                                                             10/22/2018 16:23:09 PAGE 2   

  52   3          SPDAT= lupt[i+1];                     // first 4 bits will be address of the channel
  53   3          while(!transmit_completed);               // wait for the transmit complete flag    
  54   3          transmit_completed = 0; 
  55   3          FS=1; 
  56   3          CS_BAR = 1; 
  57   3        }
  58   2        i=64; 
  59   2        }
  60   1      }
  61          /**
  62           * FUNCTION_PURPOSE:interrupt
  63           * FUNCTION_INPUTS: void
  64           * FUNCTION_OUTPUTS: transmit_complete is software transfert flag
  65           */
  66          void it_SPI(void) interrupt 9 /* interrupt address is 0x004B, (Address -3)/8 = interrupt no.*/
  67          {
  68   1        switch  ( SPSTA )         /* read and clear spi status register */
  69   1        {
  70   2          case 0x80:  
  71   2            serial_data=SPDAT;   /* read receive data */
  72   2            transmit_completed=1;/* set software flag */
  73   2          break;
  74   2      
  75   2          case 0x10:
  76   2            
  77   2          break;
  78   2        
  79   2          case 0x40:
  80   2          break;
  81   2        }
  82   1      }
  83          
  84          
  85          void SPI_Init()
  86          {
  87   1        CS_BAR = 1;                     // DISABLE ADC SLAVE SELECT-CS 
  88   1        FS=1;
  89   1        SPCON |= 0x75;                  // CPHA=1; transmit mode example 
  90   1      //  SPCON |= 0x01;                  // CPHA=1; transmit mode example 
  91   1      //  SPCON |= 0x10;                  // CPHA=1; transmit mode example 
  92   1      //  SPCON &= ~0x08;                 // CPHA=1; transmit mode example 
  93   1      //  SPCON |= 0x04;                  // CPHA=1; transmit mode example 
  94   1        IEN1 |= 0x04;                   // enable spi interrupt 
  95   1        EA=1;                           // enable interrupts 
  96   1      //  SPCON |= 0x40;                  // CPHA=1; transmit mode example 
  97   1      //  SPCON |= 0x40;                  // run spi;ENABLE SPI INTERFACE SPEN= 1 
  98   1      //  IPH0 |=0x10;
  99   1      //  IPL0 |=0x10;
 100   1      }
 101          
 102          
 103          
 104          
 105          
 106          /**
 107           * FUNCTION_PURPOSE: A delay of 15us for a 24 MHz crystal
 108           * FUNCTION_INPUTS: void
 109           * FUNCTION_OUTPUTS: none
 110           */
 111          void sdelay(int delay)
 112          {
 113   1        char d=0;
C51 COMPILER V9.59.0.0   LW9_4                                                             10/22/2018 16:23:09 PAGE 3   

 114   1        while(delay>0)
 115   1        {
 116   2          for(d=0;d<5;d++);
 117   2          delay--;
 118   2        }
 119   1      }
 120          
 121          /**
 122           * FUNCTION_PURPOSE: A delay of around 1000us for a 24MHz crystel
 123           * FUNCTION_INPUTS: void
 124           * FUNCTION_OUTPUTS: none
 125           */
 126          void delay_ms(int delay)
 127          {
 128   1        int d=0;
 129   1        while(delay>0)
 130   1        {
 131   2          for(d=0;d<382;d++);
 132   2          delay--;
 133   2        }
 134   1      }
 135          
 136          void Timer_Init()
 137          {
 138   1        TMOD = TMOD | 0x11;
 139   1        ET0=1;
 140   1      //  ET1=1;
 141   1        EA=1;
 142   1        TH0=0xFE;
 143   1      TL0=0xFC;
 144   1        //TH1=0x3C;
 145   1      //TL1=0xB0;
 146   1      }
 147          
 148          void timer0_int() interrupt 1{
 149   1      
 150   1      TR0=0;
 151   1      TH0=0xFE;
 152   1      TL0=0xFC;
 153   1        led=~led;
 154   1      i=i+2;
 155   1        TR0=1;
 156   1        
 157   1      }
 158          
 159          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    235    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     79    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
