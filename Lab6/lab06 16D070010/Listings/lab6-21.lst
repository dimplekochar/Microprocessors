A51 MACRO ASSEMBLER  LAB6_21                                                              09/17/2018 18:28:19 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\lab6-21.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE lab6-21.asm SET(SMALL) DEBUG PRINT(.\Listings\lab6-21.lst) OBJECT(.\Obj
                      ects\lab6-21.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ; This subroutine writes characters on the LCD
  00A0                 2     LCD_data equ P2    ;LCD Data port
  0080                 3     LCD_rs   equ P0.0  ;LCD Register Select
  0081                 4     LCD_rw   equ P0.1  ;LCD Read/Write
  0082                 5     LCD_en   equ P0.2  ;LCD Enable
                       6     
0000                   7     ORG 0000H
0000 020147            8     LJMP MAIN
                       9     
0200                  10     org 200h
                      11     
003B                  12     org 3bh
003B 020500           13             ljmp isrkey
                      14             
                      15     ;------------------------LCD Initialisation routine----------------------------------------
                             ------------
003E                  16     lcd_init:
003E 75A038           17              mov   LCD_data,#38H  ;Function set: 2 Line, 8-bit, 5x7 dots
0041 C280             18              clr   LCD_rs         ;Selected command register
0043 C281             19              clr   LCD_rw         ;We are writing in instruction register
0045 D282             20              setb  LCD_en         ;Enable H->L
0047 11EA             21                      acall delay
0049 C282             22              clr   LCD_en
004B 11EA             23                  acall delay
                      24     
004D 75A00C           25              mov   LCD_data,#0CH  ;Display on, Curson off
0050 C280             26              clr   LCD_rs         ;Selected instruction register
0052 C281             27              clr   LCD_rw         ;We are writing in instruction register
0054 D282             28              setb  LCD_en         ;Enable H->L
0056 11EA             29                      acall delay
0058 C282             30              clr   LCD_en
                      31              
005A 11EA             32                      acall delay
005C 75A001           33              mov   LCD_data,#01H  ;Clear LCD
005F C280             34              clr   LCD_rs         ;Selected command register
0061 C281             35              clr   LCD_rw         ;We are writing in instruction register
0063 D282             36              setb  LCD_en         ;Enable H->L
0065 11EA             37                      acall delay
0067 C282             38              clr   LCD_en
                      39              
0069 11EA             40                      acall delay
                      41     
006B 75A006           42              mov   LCD_data,#06H  ;Entry mode, auto increment with no shift
006E C280             43              clr   LCD_rs         ;Selected command register
0070 C281             44              clr   LCD_rw         ;We are writing in instruction register
0072 D282             45              setb  LCD_en         ;Enable H->L
0074 11EA             46                      acall delay
0076 C282             47              clr   LCD_en
                      48     
0078 11EA             49                      acall delay
                      50              
007A 22               51              ret                  ;Return from routine
                      52     
                      53     ;-----------------------command sending routine-------------------------------------
007B                  54      lcd_command:
007B F5A0             55              mov   LCD_data,A     ;Move the command to LCD port
007D C280             56              clr   LCD_rs         ;Selected command register
A51 MACRO ASSEMBLER  LAB6_21                                                              09/17/2018 18:28:19 PAGE     2

007F C281             57              clr   LCD_rw         ;We are writing in instruction register
0081 D282             58              setb  LCD_en         ;Enable H->L
0083 11EA             59                      acall delay
0085 C282             60              clr   LCD_en
0087 11EA             61                      acall delay
                      62         
0089 22               63              ret  
                      64     ;-----------------------data sending routine-------------------------------------          
                                       
008A                  65      lcd_senddata:
008A F5A0             66              mov   LCD_data,A     ;Move the command to LCD port
008C D280             67              setb  LCD_rs         ;Selected data register
008E C281             68              clr   LCD_rw         ;We are writing
0090 D282             69              setb  LCD_en         ;Enable H->L
0092 11B4             70                      acall DELAY1
0094 C282             71              clr   LCD_en
0096 22               72              ret                  ;Return from busy routine
                      73                      
                      74     ;-----------------------------1sec delay-----------------------------------------------
0097                  75     delaysec: 
                      76     USING 0
0097 C0D0             77     PUSH PSW
0099 C003             78     PUSH AR3
009B C004             79     PUSH AR4
009D C005             80     PUSH AR5
009F 7B14             81     MOV R3,#20
00A1 7CC8             82     del1:MOV R4,#200 
00A3 7DFF             83                BACK11: MOV R5,#0FFH 
00A5 DDFE             84                           BACK1: DJNZ R5, BACK1 
00A7 DCFA             85                                     DJNZ R4, BACK11
00A9 DBF6             86                                     DJNZ R3,del1
00AB D005             87     POP AR5
00AD D004             88     POP AR4
00AF D003             89     POP AR3
00B1 D0D0             90     POP PSW
00B3 22               91     RET
                      92                      
                      93                      
                      94                      
                      95     ;-----------------------------100ms delay------------------------------------------------
00B4                  96     DELAY1: 
                      97     USING 0
00B4 C0D0             98     PUSH PSW
00B6 C003             99     PUSH AR3
00B8 C004            100     PUSH AR4
00BA C005            101     PUSH AR5
00BC 7B02            102     MOV R3,#2
00BE 7CC8            103     del15:MOV R4,#200 
00C0 7DFF            104                BACK115: MOV R5,#0FFH 
00C2 DDFE            105                           BACK15: DJNZ R5, BACK15
00C4 DCFA            106                                     DJNZ R4, BACK115
00C6 DBF6            107                                     DJNZ R3,del15
00C8 D005            108     POP AR5
00CA D004            109     POP AR4
00CC D003            110     POP AR3
00CE D0D0            111     POP PSW
00D0 22              112     RET
                     113     ;------------------------------10ms delay------------------------------------------------
00D1                 114     delay10: 
                     115     USING 0
00D1 C0D0            116     PUSH PSW
00D3 C003            117     PUSH AR3
00D5 C004            118     PUSH AR4
00D7 C005            119     PUSH AR5
00D9 7C28            120     MOV R4,#40 
00DB 7DFF            121                BACK116: MOV R5,#0FFH 
A51 MACRO ASSEMBLER  LAB6_21                                                              09/17/2018 18:28:19 PAGE     3

00DD DDFE            122                           BACK16: DJNZ R5, BACK16
00DF DCFA            123                                     DJNZ R4, BACK116
00E1 D005            124     POP AR5
00E3 D004            125     POP AR4
00E5 D003            126     POP AR3
00E7 D0D0            127     POP PSW
00E9 22              128     RET
                     129     
                     130     
                     131     
                     132     
                     133     ;-------------------------------initial delay-----------------------------------------------
00EA C000            134     delay:   push 0
00EC C001            135                     push 1
00EE 7801            136             mov r0,#1
00F0 79FF            137     loop2:   mov r1,#255
00F2 D9FE            138     loop1:   djnz r1, loop1
00F4 D8FA            139     djnz r0, loop2
00F6 D001            140     pop 1
00F8 D000            141     pop 0 
00FA 22              142     ret
                     143     
                     144     ;-----------------------text strings sending routine-------------------------------------
                     145     
00FB                 146     lcd_sendstring:
                     147                     Using 0
00FB C000            148                             push AR0
00FD C003            149                             push AR3
00FF C006            150                             push AR6
0101 C0E0            151                 push 0e0h
0103 7B11            152                     MOV R3, #17
0105 7841            153                     MOV R0, #41H
0107 7E80            154                      mov R6,#080H   
0109                 155       PRINT_LOOP:
0109 EE              156              mov a, R6;Put cursor on first row,1st column
010A 117B            157     acall lcd_command        ;send command to LCD
010C 11EA            158     acall delay
010E E4              159             clr   a                 ;clear Accumulator for any previous data
010F E8              160             mov  a, R0        ;load the first character in accumulator
0110 118A            161              acall lcd_senddata      ;send first char
0112 08              162              inc   R0 
0113 0E              163     inc R6           ;increment data pointer
0114 DBF3            164             DJNZ R3, PRINT_LOOP    ;jump back to send the next character
0116 D0E0            165      pop 0e0h
0118 D006            166      pop AR6
011A D003            167     POP AR3
011C D000            168                             pop AR0
011E 22              169              ret
                     170     ;End of routine
                     171     
011F                 172     lcd_sendkey:
                     173                     Using 0
011F C000            174                             push AR0
0121 C003            175                             push AR3
0123 C006            176                             push AR6
0125 C0E0            177                 push 0e0h
0127 FE              178              mov R6, A;Put cursor on first row,1st column
0128 7480            179                      mov a, #80h
012A 117B            180     acall lcd_command        ;send command to LCD
012C 11EA            181     acall delay
012E 900700          182     mov   dptr, #initial   ;Load DPTR with sring1 Addr
0131                 183              PRINT_LOOP1:
0131 E4              184     clr   a                 ;clear Accumulator for any previous data
0132 93              185     movc  a,@a+dptr         ;load the first character in accumulator
0133 6005            186     jz    exit              ;go to exit if zero
0135 118A            187     acall lcd_senddata      ;send first char
A51 MACRO ASSEMBLER  LAB6_21                                                              09/17/2018 18:28:19 PAGE     4

0137 A3              188     inc   dptr              ;increment data pointer
0138 80F7            189     sjmp  PRINT_LOOP1    ;jump back to send the next character
013A E4              190     exit:           clr   a                 ;clear Accumulator for any previous data
013B EE              191             mov  a, R6        ;load the first character in accumulator
013C 118A            192              acall lcd_senddata      ;send first char
013E D0E0            193      pop 0e0h
0140 D006            194      pop AR6
0142 D003            195     POP AR3
0144 D000            196                             pop AR0
0146 22              197              ret                     ;End of routine
                     198     
                     199     
                     200     
0147                 201     MAIN:
                     202     
0147 75A000          203     mov P2,#00h
                     204     
014A 11EA            205     acall delay
014C 11EA            206     acall delay
014E 113E            207     acall lcd_init      ;initialise LCD
0150 11EA            208     acall delay
0152 11EA            209     acall delay
0154 11EA            210     acall delay
0156 7481            211     mov a,#081H              ;Put cursor on first row,1st column
0158 117B            212     acall lcd_command        ;send command to LCD
015A 11EA            213     acall delay
                     214     
                     215     
                     216     ;------- keypad configuration------------
                     217     
015C 75900F          218     mov p1,#00fh            ;LSB as row, MSB as column                                         
                                                          
015F D2AF            219     setb IE.7
0161 E5B1            220     mov a,0b1h              ;IEN1, interrupt enable register
0163 4401            221     ORL a,#01               ;changing only the required bit, without changing the other bits
0165 F5B1            222     mov 0b1h,a                      
0167 759C0F          223     mov 9cH,#00fh           ;KBLS (level selector), LSB as row, MSB as column
016A 759DF0          224     mov 9dH,#00f0h          ;KBE (Keyboard enable) LSB as interrupt, MSB as I/O
                     225     
016D 7590F0          226     mov p1, #0f0h   
                     227     
0170 11FB            228     Here:     acall lcd_sendstring  ;call text strings sending routine
0172 11EA            229      acall delay
0174 75A001          230              mov   LCD_data,#01H  ;Clear LCD
0177 C280            231              clr   LCD_rs         ;Selected command register
0179 C281            232              clr   LCD_rw         ;We are writing in instruction register
017B D282            233              setb  LCD_en         ;Enable H->L
017D 11EA            234                      acall delay
017F C282            235              clr   LCD_en
                     236              
0181 11EA            237                      acall delay
                     238                             
0183 80EB            239     SJMP Here
                     240     
                     241     ;======================MAIN====================
0500                 242     org 500h
0500                 243             isrkey:
0500 E590            244             mov a, p1
0502 11D1            245             acall delay10
0504 B5906E          246             cjne a, p1, ending
0507                 247             Final: 
0507 C290            248             clr p1.0
0509 D291            249             setb p1.1
050B D292            250             setb p1.2
050D D293            251             setb p1.3
050F E590            252             mov a, p1
A51 MACRO ASSEMBLER  LAB6_21                                                              09/17/2018 18:28:19 PAGE     5

0511 54F0            253             anl a, #0f0h
0513 B4F02F          254             cjne a, #0f0h, row0
0516 D290            255             setb p1.0
0518 C291            256             clr p1.1
051A D292            257             setb p1.2
051C D293            258             setb p1.3
051E E590            259             mov a, p1
0520 54F0            260             anl a, #0f0h
0522 B4F025          261             cjne a, #0f0h, row1
0525 D290            262             setb p1.0
0527 D291            263             setb p1.1
0529 C292            264             clr p1.2
052B D293            265             setb p1.3
052D E590            266             mov a, p1
052F 54F0            267             anl a, #0f0h
0531 B4F01B          268             cjne a, #0f0h, row2
0534 D290            269             setb p1.0
0536 D291            270             setb p1.1
0538 D292            271             setb p1.2
053A C293            272             clr p1.3
053C E590            273             mov a, p1
053E 54F0            274             anl a, #0f0h
0540 B4F011          275             cjne a, #0f0h, row3
0543 80C2            276             sjmp final
                     277             
0545 900710          278                     row0: mov dptr, #disp0
0548 800F            279             sjmp col
054A 900714          280                     row1: mov dptr, #disp1
054D 800A            281             sjmp col
054F 900718          282                     row2: mov dptr, #disp2
0552 8005            283             sjmp col
0554 90071C          284                     row3: mov dptr, #disp3
0557 8000            285             sjmp col
                     286             
0559                 287             col: 
0559 33              288             rlc a
055A 5003            289             jnc colfound
055C A3              290             inc dptr
055D 80FA            291             sjmp col
                     292             
055F                 293             colfound:
055F 75A001          294              mov   LCD_data,#01H  ;Clear LCD
0562 C280            295              clr   LCD_rs         ;Selected command register
0564 C281            296              clr   LCD_rw         ;We are writing in instruction register
0566 D282            297              setb  LCD_en         ;Enable H->L
0568 11EA            298                      acall delay
056A C282            299              clr   LCD_en
056C E4              300             clr a
056D C3              301             clr c
056E 93              302             movc a, @a+dptr
056F 12011F          303             lcall lcd_sendkey
0572 120097          304             lcall delaysec
                     305     
0575                 306             ending:
0575                 307             clearkbf: 
0575 759E00          308             mov 9eh, #0
0578 AC9E            309             mov R4, 9eh
057A BC00F8          310             cjne r4, #0, clearkbf
                     311             ;mov p1, #0fh
                     312             
057D C280            313              clr   LCD_rs         ;Selected command register
057F C281            314              clr   LCD_rw         ;We are writing in instruction register
0581 D282            315              setb  LCD_en         ;Enable H->L
0583 11EA            316                      acall delay
0585 C282            317              clr   LCD_en
                     318                      
A51 MACRO ASSEMBLER  LAB6_21                                                              09/17/2018 18:28:19 PAGE     6

0587 32              319             reti
                     320             
                     321             
0700                 322             org 700h
0700                 323     initial:
0700 4B657920        324                     DB "Key pressed is ", 0H
0704 70726573                
0708 73656420                
070C 69732000                
0710                 325     disp0:
0710 30313233        326                     DB   '0', '1', '2', '3'
0714                 327     disp1:
0714 34353637        328                     DB   '4', '5', '6', '7'
0718                 329     disp2:
0718 38394142        330                     DB   '8', '9', 'A', 'B'
071C                 331     disp3:
071C 43444546        332                     DB   'C', 'D', 'E', 'F'
                     333                             
                     334     END                     
                             
A51 MACRO ASSEMBLER  LAB6_21                                                              09/17/2018 18:28:19 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AR0. . . . . . . .  D ADDR   0000H   A   
AR3. . . . . . . .  D ADDR   0003H   A   
AR4. . . . . . . .  D ADDR   0004H   A   
AR5. . . . . . . .  D ADDR   0005H   A   
AR6. . . . . . . .  D ADDR   0006H   A   
BACK1. . . . . . .  C ADDR   00A5H   A   
BACK11 . . . . . .  C ADDR   00A3H   A   
BACK115. . . . . .  C ADDR   00C0H   A   
BACK116. . . . . .  C ADDR   00DBH   A   
BACK15 . . . . . .  C ADDR   00C2H   A   
BACK16 . . . . . .  C ADDR   00DDH   A   
CLEARKBF . . . . .  C ADDR   0575H   A   
COL. . . . . . . .  C ADDR   0559H   A   
COLFOUND . . . . .  C ADDR   055FH   A   
DEL1 . . . . . . .  C ADDR   00A1H   A   
DEL15. . . . . . .  C ADDR   00BEH   A   
DELAY. . . . . . .  C ADDR   00EAH   A   
DELAY1 . . . . . .  C ADDR   00B4H   A   
DELAY10. . . . . .  C ADDR   00D1H   A   
DELAYSEC . . . . .  C ADDR   0097H   A   
DISP0. . . . . . .  C ADDR   0710H   A   
DISP1. . . . . . .  C ADDR   0714H   A   
DISP2. . . . . . .  C ADDR   0718H   A   
DISP3. . . . . . .  C ADDR   071CH   A   
ENDING . . . . . .  C ADDR   0575H   A   
EXIT . . . . . . .  C ADDR   013AH   A   
FINAL. . . . . . .  C ADDR   0507H   A   
HERE . . . . . . .  C ADDR   0170H   A   
IE . . . . . . . .  D ADDR   00A8H   A   
INITIAL. . . . . .  C ADDR   0700H   A   
ISRKEY . . . . . .  C ADDR   0500H   A   
LCD_COMMAND. . . .  C ADDR   007BH   A   
LCD_DATA . . . . .  D ADDR   00A0H   A   
LCD_EN . . . . . .  B ADDR   0080H.2 A   
LCD_INIT . . . . .  C ADDR   003EH   A   
LCD_RS . . . . . .  B ADDR   0080H.0 A   
LCD_RW . . . . . .  B ADDR   0080H.1 A   
LCD_SENDDATA . . .  C ADDR   008AH   A   
LCD_SENDKEY. . . .  C ADDR   011FH   A   
LCD_SENDSTRING . .  C ADDR   00FBH   A   
LOOP1. . . . . . .  C ADDR   00F2H   A   
LOOP2. . . . . . .  C ADDR   00F0H   A   
MAIN . . . . . . .  C ADDR   0147H   A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
PRINT_LOOP . . . .  C ADDR   0109H   A   
PRINT_LOOP1. . . .  C ADDR   0131H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
ROW0 . . . . . . .  C ADDR   0545H   A   
ROW1 . . . . . . .  C ADDR   054AH   A   
ROW2 . . . . . . .  C ADDR   054FH   A   
ROW3 . . . . . . .  C ADDR   0554H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
